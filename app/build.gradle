plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-android'
    id 'androidx.navigation.safeargs'
    id 'kotlin-parcelize'
    id 'com.google.dagger.hilt.android'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.github.triplet.play'
}

android {
    signingConfigs {
        /*release {

        storeFile file('C:\\Users\\sadew\\AndroidStudioProjects\\binar-android-chapter8\\app\\keystorechapter8.jks')
            storePassword 'keystorechapter8'
            keyAlias 'keystorechapter8'
            keyPassword 'keystorechapter8'
        }*/
    }
    namespace 'com.binar.movieapp'
    compileSdkVersion 32

    defaultConfig {
        applicationId "com.binar.movieapp"
        minSdkVersion 21
        targetSdkVersion 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.debug
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //signingConfig signingConfigs.release
            signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    testOptions {
        unitTests.includeAndroidResources = true
    }

    def keyPropertiesFile = rootProject.file("key.properties")
    def keyProperties = new Properties()
    keyProperties.load(new FileInputStream(keyPropertiesFile))

    flavorDimensions "default", "version"
    productFlavors {
        production {
            dimension = "default"
            buildConfigField("String", "BASE_URL", "\"${keyProperties.getProperty("BASE_URL")}\"")
            buildConfigField("String", "API_KEY", "\"${keyProperties.getProperty("API_KEY")}\"")
        }
        free {
            dimension = "version"
            applicationIdSuffix ".free"
            versionNameSuffix ".free"
            manifestPlaceholders = [appLabel: "FreeMovieApp"]
        }
        premium {
            dimension = "version"
            applicationIdSuffix ".premium"
            versionNameSuffix ".premium"
            manifestPlaceholders = [appLabel: "PremiumMovieApp"]
        }
    }
    lint {
        // Turns off checks for the issue IDs you specify.
        disable 'OldTargetApi','ContentDescription', 'UnusedAttribute'

        // Turns on checks for the issue IDs you specify. These checks are in
        // addition to the default lint checks.
        //enable 'RtlHardcoded','RtlCompat', 'RtlEnabled'

        // To enable checks for only a subset of issue IDs and ignore all others,
        // list the issue IDs with the 'check' property instead. This property overrides
        // any issue IDs you enable or disable using the properties above.
        //checkOnly 'NewApi', 'InlinedApi'

        // If set to true, turns off analysis progress reporting by lint.
        //quiet true

        // If set to true (default), stops the build if errors are found.
        abortOnError false

        // If true, only report errors.
        //ignoreWarnings true

        // If true, lint also checks all dependencies as part of its analysis. Recommended for
        // projects consisting of an app with library dependencies.
        checkDependencies true
    }
    lintOptions {
        //checkOnly 'id'
        baseline file("lint-baseline.xml")
    }
}

kapt {
    correctErrorTypes true
}

dependencies {
    //firebase
    implementation platform('com.google.firebase:firebase-bom:29.3.1')
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-firestore-ktx'
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-storage-ktx'
    implementation 'androidx.test:core-ktx:1.4.0'
    implementation 'androidx.test.ext:junit-ktx:1.1.3'

    //special testing
    testImplementation "androidx.arch.core:core-testing:2.1.0" // InstantTaskExecutorRule

    //testing
    testImplementation "io.mockk:mockk:1.13.2"
    testImplementation 'junit:junit:4.12'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation 'org.mockito:mockito-core:4.4.0'
    testImplementation 'org.mockito:mockito-inline:4.4.0'
    testImplementation "androidx.arch.core:core-testing:2.1.0" // InstantTaskExecutorRule
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.1" //TestCoroutineDispatcher
    testImplementation("org.assertj:assertj-core:3.23.1")

    //dagger hilt
    implementation "com.google.dagger:hilt-android:2.44"
    testImplementation 'junit:junit:4.12'
    testImplementation 'junit:junit:4.12'
    kapt "com.google.dagger:hilt-compiler:2.44"

    //work manager
    implementation "androidx.work:work-runtime-ktx:2.7.1"

    //datastore
    implementation("androidx.datastore:datastore-preferences:1.0.0")
    implementation "androidx.activity:activity-ktx:1.5.0"

    //retrofit & okhttp
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'

    // Room and Lifecycle dependencies
    implementation "androidx.room:room-runtime:$room_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"

    // Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"
    implementation "androidx.fragment:fragment-ktx:1.5.3"

    // Database encryption
    implementation "net.zetetic:android-database-sqlcipher:4.4.0"
    implementation "androidx.sqlite:sqlite-ktx:2.2.0"

    // ktx lifecycle
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.5.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.5.1"

    //Glide image loader
    implementation 'com.github.bumptech.glide:glide:4.14.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.14.0'

    // coil image loader
    implementation 'io.coil-kt:coil:2.2.1'

    // chucker interceptor
    debugImplementation "com.github.chuckerteam.chucker:library:3.5.2"
    releaseImplementation "com.github.chuckerteam.chucker:library-no-op:3.5.2"

    implementation "androidx.recyclerview:recyclerview:1.2.0-alpha02"

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}